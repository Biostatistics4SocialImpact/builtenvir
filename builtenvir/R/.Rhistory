1 %>% `+`(2)
library (ggplot2)
library (scales)
library (reshape2)
head(df)
df
df[, 1:4]
library (plyr)
dlply(df, c("day", "temperature"))
dlply(df, c("day", "temperature"), function(x) x - x[1, ])
dlply(df, c("day", "temperature"), function(x) x - x[rep(1, nrow(x)), ])
warnings()
factor(1:2) - factor(2:3)
names(df)
ndf[, 1:4]
ndf[, 1:5]
df[,1:5]
dlply(df, c("day", "temperature"))
attributes(df)
sapply(df, is.factor)
ndf[, 1:5]
ndf[, 1:5]
ndf
names(ndf)
melt(ndf, c("day", "temperature", "treatment")) %>% head()
head(ndf)
getwd()
ggsave("stipid_lil_graph_01.pdf")
ggsave("stipid_lil_graph_01.pdf")
ggsave("stupid_lil_graph_01.pdf")
rm(list = ls())
scale(matrix(1:9, 3))
cor(X)
summary(c(X %*% b.truth))
summary(g.inv(c(X %*% b.truth)))
which.max(abs(b.truth))
b.update()
b.update() %>% as.data.frame()
b.update() %>% do.call("c", .)
c(theta = b, p = 1)
summary(sims[, q + 1])
b
b.truth
crossprod(X)
solve(crossprod(X))
mean(sims[, q + 1])
K <- K * 0.9
b
b.truth
mean(sims[, q + 1])
K <- K * 0.9
b
mean(sims[, q + 1])
K <- K * 0.9
b
mean(sims[, q + 1])
dim(sims)
head(sims)
t(b - mu) %*% tau %*% (b - mu)
g.inv
sum(y * log(g.inv(X %*% b)))
sum((1 - y) * log(1 - g.inv(X %*% b)))
log.post.b(b)
log.post.b(b.truth)
exp(-88)
exp(-400)
exp(log.post.b(b.truth) - log.post.b(b))
K
b
b.truth
exp(log.post.b(b.truth) - log.post.b(b))
b
mean(sims[, q+1])
K <- K * 1.1
mean(sims[, q+1])
K <- K * 1.1
mean(sims[, q+1])
K <- K * 1.1
mean(sims[, q+1])
K <- K * 1.1
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
b
mean(sims[, q+1])
b
b.truth
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
K <- K * 0.9
mean(sims[, q+1])
mean(sims[, q+1])
colMeans(sims)
b.truth
cbind("truth" = b.truth, "est" = colMeans(sims)[1:q], "glm" = coef(glm(y ~ X - 1)))
hist(sims[, 1])
K
cov(sims)
image(cor(sims))
getwd()
setwd("../research")
dyn.load("bayesBernNormal.so")
ls()
fit <- .Call("bayesBernNormal", y, X, b, mu, tau, 5000, 1000, 2000, 200, 22190)
dim(df)
head(df)
head(ndf)
levels(df$Treatment)
levels(df$Temperature)
levels(ndf$Treatment)
sapply(subs, sum)
sapply(subs, sum)
p.annot
p.annot
annot.size
p.annot
treat.g
levels(ndf$Temperature)
t.test(value ~ Treatment, paired = TRUE, data = ndf, subset = variable == "Minutiae" & subs[[2]])
range(df[, "Minutiae"])
names(df)
p.annot
dim(subset(ndf, variable == var.name & subs[[1]]))
dim(subset(ndf, variable == var.name))
p.annot
t.test(value ~ Treatment, paired = TRUE, data = ndf, subset = variable == var.name & subs[[2]])
var.name
yrange
yrange
yrange
names(df)
p.annot
yrange
annot.size
names(df)
p.annot
head(ndf)
ls()
use.packages
dlply(ndf, "variable")[[1]]
q()
head(ndf)
levels(ndf$Treatment)
levels(ndf$Treatment) <- c("H", "H+CFM")
head(ndf)
treat.g
q()
treat.g
treat.g
head(ndf)
treat.g
q()
